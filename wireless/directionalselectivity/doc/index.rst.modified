:orphan:

Directional Selectivity of Antennas
===================================

.. keywords: directional characteristics, radiation pattern,
   directionality, directional selectivity, gain, lobes,

.. radiation pattern -> depiction of directional characteristics

Goals
-----

INET contains various isotropic, omnidirectional and directional antenna
models. The support for different antennas is useful for simulating many
kinds of wireless scenarios where antenna characteristics are important.

This showcase aims to highlight the antenna models available in INET,
and their directional characteristics. The showcase contains an example
simulation which demonstrates the direcionality of five antenna models.

| INET version: ``4.0``
| Source files location: `inet/showcases/wireless/directionalselectivity <https://github.com/inet-framework/inet-showcases/tree/master/general/directionalselectivity>`__

Concepts
--------

In INET, radio modules contain transmitter, receiver, and antenna
submodules. The success of receiving a wireless transmission depends on
the strength of the signal present at the receiver, among other things,
such as interference from other signals. Both the transmitter and the
receiver submodules use the antenna submodule of the radio when sending and
receiving transmissions. Actually, the antenna can have its own mobility
submodule, thus its own position and orientation, which also affects
reception.

The antenna module affects transmission and reception in multiple ways:

- The relative position of the antennas is used when calculating reception signal strength (i.e. attenuation due to distance).
- Antenna gain is applied to the signal power at transmission and reception. The applied gain depends on each antenna module's directional characteristics, and the relative position and the orientation of the two antennas. This can increase or decrease the received signal power.
- By default, the antenna uses the containing network node's mobility submodule to describe its position and orientation, i.e. it has the same position and orientation as the network node. However, antenna modules have optional mobility submodules of their own.

INET contains the following antenna module types:

- **Isotropic**:

  - :ned:`IsotropicAntenna`: hypothetical antenna that radiates with the same intensity in all directions
  - :ned:`ConstantGainAntenna`: the same as :ned:`IsotropicAntenna`, but has a constant gain parameter

- **Omnidirectional**:

  - :ned:`DipoleAntenna`: models a `dipole antenna <https://en.wikipedia.org/wiki/Dipole_antenna>`__

- **Directional**:

  - :ned:`ParabolicAntenna`: models a `parabolic antenna <https://en.wikipedia.org/wiki/Parabolic_antenna>`__'s main radiation lobe, ignoring sidelobes
  - :ned:`CosineAntenna`: models directional antenna characteristics with a cosine pattern

- **Other**:

  - :ned:`InterpolatingAntenna`: can model many complex antenna characteristics using linear interpolation

The default antenna module in all radios is :ned:`IsotropicAntenna`.

Visualizing antenna directionality
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The :ned:`RadioVisualizer` module can visualize antenna directional characteristics, using its antenna lobe
visualization feature. The visualizer can display the antenna's
radiation pattern. For example, the radiation patterns of
an isotropic and a diretional antenna:

.. figure:: antennalobe2.png
   :width: 100%

This visualization feature can be enabled by setting the visualizer's
:par:`displayAntennaLobes` parameter to ``true`` (false by default).
The visualized lobes indicate the antenna gain. The gain at a given direction is proportional to the length of the line connecting the node and the boundary of the lobe shape.
The shape of the visualized radiation pattern can be fine-tuned with the following parameters, as needed:

- The :par:`antennaLobeStep` parameter controls the TODO
- The :par:`antennaLobeRadius` parameter

The shape and size of the antenna lobe figure is determined by the characteristics of the antenna, but
the also the parameters of the visualizer. There are several parameters for fine-tuning the visualized radiation
pattern.

The :par:`antennaLobeLogarithmicScale` parameter controls the scale in which the gain is evaluated. It is
either ``linear`` or ``logarithmic`` (logarithmic by default).
The size of the antenna lobe figure is determined by the :par:`antennaLobeRadius` parameter, which specifies
the size of the visualization in pixels.

SO WHAT I WANNA SAY HERE

-how is the shape coming together?
-first, specify the scale...visualize antenna gain at all angles using a linear or a logarithmic scale
-set the fine-grainedness of the visualization...evaluate the gain at every X degree angle
-the size of the figure is specified by the antennaloberadius parameter.
actually, the whole antenna lobe figure is made up of circle sections, the radi of which depends on the gain at
the evaluated angles (the size at the intermittent angles is interpolated)
-the radius of the 0 db gain is given by the antennaloberadius parameter, in pixels
-or, the maximum gain is at the given radius, depending on the normalized parameter
-the 0 db distance is indicated by a dashed circle
-the 0 db circle either marks the absolute 0 db gain distance, or the maximum gain, depending on the relativelabels parameter
-the scale parameter specifies how sensitive the visualization is to changes in gain...if too low, the fine details of the radiation pattern are not visible (large changes in gain are visualized as small changes in the lobe shape distance)
if it is too high, detail are lost again, as even small changes from base radius result in 0 shape distance)
there is an optimal range for this value, depending on the individual antenna characteristics (antennas with little variation need a higher value in order for the variation to be clearly visible/prominent. similarly, antennas with high variation need a lower value) TODO: test this with the rectangular interpolating antenna config

The antenna lobe figure is is made up of circle segments, the radi of which depend on the gain evaluated at certain angles. The :par:`antennaLobeStep` parameter specifies how fine-grained the evaluation is, i.e. it evaluates the gain at every :par:`antennaLobeStep` degrees (10 degrees by default). The size of the circle at the intermittent angles is interpolated. The gain can be visualized on a ``linear`` or a ``logarithmic`` scale, as set by the :par:`antennaLobeMode` parameter (logarithmic by default). 

The :par:`antennaLobeRadius` parameter specifies the pixel radius of the circle segment, which is at 0 dB.

The :par:`antennaLobeRadius` parameter specifies the size of the antenna lobe figure, according to the following:

The visualization of the radiation pattern can either be `normalized`, i.e. 

-the radiation patterns of different antennas can be compared...
either the normalized ones...which means, that the at the same radius, the max gain is displayed...
so the shapes can be compared
-to compare the absolute gain, the same radius needs to be set. this is where the unit gain will be
also, the same scale (sensitivity) needs to be set -> because if not, then it can happen that for example,
the unit gain radius is 100 pixels, and at 200 pixel distance, with one antenna the gain is 10dB, with another it is 20dB...
-so either compare qualitatively...the shapes
-or quantitatively...the gains at various angles

TODO: should start this concept with the normalized...either you wanna display the normalized pattern or the absolute...in either logarithmic or linear scale...then set where to put the circle

TODO: so if the normalize is true and the max gain is at the antennaloberadius, if the label is relative, the circle will be at the edge...if the label is absolute, then the label is at the unit gain
if not normalized...then the unit gain is at the radius distance, and if the label is relative, the circle is at the edge...if absolute, it is at the radius distance -> this means that if the label is relative, the circle is always at the edge of the figure...denoting the maximum gain, as 0 db

-so...the pattern can either be displayed as normalized...which is...the radius gives the max gain distance
this way, the different antennas will have same sized figures...deviation from max gain
-or display absolute, qualitatively or quantitatively


(The 0 dB gain is at the distance defined by the `antennaLobeRadius` parameter.)

The visualization is actually a cross-section of the 3D radiation pattern. By default, the cross-section plane corresponds to the current viewing angle, in the global coordinate system. However, one can specify other planes in the antenna's local coordinate system, using the visualizer's `antennaLobePlane` parameter. The possible values for the parameter are: `view` (default), `xy`, `xz`, and `yz`. (The views in the antenna's local coordinate system is typically useful for validating antenna models, by checking their shape from the different viewpoints).

The model
---------

The showcase contains five example simulations, which demonstrate the
directional characteristics of five antenna modules. The simulation uses
the ``AntennaDirectionShowcase`` network:

.. figure:: network.png
   :width: 60%
   :align: center

The network contains two :ned:`AdhocHost`\ s, named ``source`` and
``destination``. There is also an :ned:`Ipv4NetworkConfigurator`, an
:ned:`IntegratedVisualizer`, and an :ned:`Ieee80211ScalarRadioMedium` module.

The source host is positioned in the center of the playground. The
destination host is configured to circle the source host, while the
source host pings the destination every 0.5 seconds. We'll use the ping
transmissions to probe the directional characteristics of ``source``'s
antenna, by recording the power of the received signal in
``destination``. The destination host will do one full circle around the
source. The distance of the two hosts will be constant to get meaningful
data about the antenna characteristics. We'll run the simulation with
five antenna types in ``source``: :ned:`IsotropicAntenna`,
:ned:`ParabolicAntenna`, :ned:`DipoleAntenna`, :ned:`CosineAntenna`, and
:ned:`InterpolatingAntenna`. The destination has the default
:ned:`IsotropicAntenna` in all simulations.

The configurations for the five simulations differ in the antenna
settings only, all other settings are in the ``General`` configuration
section:

.. literalinclude:: ../omnetpp.ini
   :start-at: General
   :end-at: displayLink
   :language: ini

The source host is configured to send ping requests every 0.5s. This is
effectively the probe interval, the antenna characteristic data can be
made more fine-grained by setting a more frequent ping rate. The
destination is configured to circle the source with a radius of 150m.
The simulation runs for 360s, and the speed of ``destination`` is set so
it does one full circle. This way, when plotting the reception power,
the time can be directly mapped to the angle.

The visualizer is set to display antenna lobes in ``source`` (the
``displayRadios`` is the master switch in :ned:`RadioVisualizer`, so it
needs to be set to ``true``), and active data links (indicating successfully received
transmissions).

The antenna specific settings are defined in distinct configurations,
named according to the antenna type used (:ned:`IsotropicAntenna`,
:ned:`ParabolicAntenna`, :ned:`DipoleAntenna`, :ned:`CosineAntenna`, and
:ned:`InterpolatingAntenna`).

Isotropic Antenna
~~~~~~~~~~~~~~~~~

The :ned:`IsotropicAntenna` is the default in all radio modules. This
module models a hypothetical antenna which radiates with the same power
in all directions. It is useful if the emphasis of the simulation is not
on the details of antennas. This module can be used to approximate
real world directionless antennas. The module has no parameters. The
configuration for this antenna is :ned:`IsotropicAntenna` in :download:`omnetpp.ini <../omnetpp.ini>`.
The configuration just sets the antenna type in ``source``:

.. literalinclude:: ../omnetpp.ini
   :start-at: IsotropicAntenna
   :end-before: ParabolicAntenna
   :language: ini

When the simulation is run, it looks like the following:

.. figure:: isotropic1.png
   :width: 70%
   :align: center

The radiation pattern is a circle, as the antenna is directionless
(actually, the isotropic antenna's radiation pattern is a circle from
any viewpoint). Here is a video of the simulation running:

.. video:: isotropic3.mp4

.. <!--internal video recording, animation speed 1, playback speed 21.88, normal run, crop 25 25 150 750-->

The destination node circles the source node, all ping messages are
successfully received. Here is the reception power vs. direction:

.. figure:: isotropicchart.png
   :width: 100%

Parabolic Antenna
~~~~~~~~~~~~~~~~~

The :ned:`ParabolicAntenna` module simulates the main lobe radiation
pattern of a parabolic antenna. The antenna module has the following
parameters:

-  ``MaxGain``: the maximum gain of the antenna
-  ``MinGain``: the minimum gain of the antenna
-  ``BeamWidth``: the 3 dB beam width

The configuration for this antenna is :ned:`ParabolicAntenna` in
:download:`omnetpp.ini <../omnetpp.ini>`:

.. literalinclude:: ../omnetpp.ini
   :start-at: ParabolicAntenna
   :end-before: DipoleAntenna
   :language: ini

When the simulation is run, it looks like the following:

.. figure:: parabolic1.png
   :width: 100%

The radiation pattern is a narrow lobe. Note that in directions off from
the main direction, the radiation pattern might appear to be zero, but
actually, it is just very small. Note the small protrusion to the left
on the following, zoomed-in image:

.. figure:: parabolicsidelobe.png
   :width: 10%
   :align: center

Here is a video of the simulation:

.. video:: parabolic3.mp4
      :width: 90%
      :align: center

.. <!--internal video recording, animation speed 1, playback speed 21.88, normal run, crop 25 25 150 750-->

The ping probe messages are successfully received when the destination
node is near the main lobe of ``source``'s antenna.
Note that the communication can be successful outside the main lobe. The main lobe just indicates that the antenna gain is larger in that direction, but the received signal strength can be strong enough elsewhere.
Here is the reception power vs. direction:

.. figure:: parabolicchart.png
   :width: 100%

Dipole Antenna
~~~~~~~~~~~~~~

The :ned:`DipoleAntenna` module models a dipole antenna. It has one
parameter, ``length``. The configuration in :download:`omnetpp.ini <../omnetpp.ini>` is the
following:

.. literalinclude:: ../omnetpp.ini
   :start-at: DipoleAntenna
   :end-before: CosineAntenna
   :language: ini

The configuration sets the antenna type to :ned:`DipoleAntenna`, and the
antenna length to 0.1m. The elevation and bank parameters are used to
rotate the source node, so that the radiation pattern is more
interesting (the dipole
radiation pattern's donut shape is the same as the isotropic antenna's
when viewed from above). It looks like this when the simulation is run:

.. figure:: dipole1.png
   :width: 70%
   :align: center

The radiation pattern is the dipole's donut shape, when viewed from the
side. Here is a video of the simulation:

.. video:: dipole2.mp4

.. <!--internal video recording, animation speed 1, playback speed 21.88, normal run, crop 25 25 150 750-->

There is no successfull communication when the destination node is at
the null direction. Here is the reception power vs. direction:

.. figure:: dipolechart.png
   :width: 100%

Cosine Antenna
~~~~~~~~~~~~~~

The :ned:`CosineAntenna` module approximates a directional antenna with a
cosine pattern. In this model, the shape of the radiation pattern is
given by a cosine exponent. The module has two parameters, ``MaxGain``
and ``Beamwidth``.

The radiation pattern is similar to the parabolic antenna's. It looks
like the following:

.. figure:: cosine1.png
   :width: 100%

Here is a video of the simulation:

.. video:: cosine2.mp4
      :width: 90%
      :align: center

Here is the reception power vs. direction:

.. figure:: cosinechart.png
   :width: 100%

Interpolating Antenna
~~~~~~~~~~~~~~~~~~~~~

The :ned:`InterpolatingAntenna` module can model complex antenna
characteristics with linear interpolation. It has three parameters:
``HeadingGains``, ``ElevationGains`` and ``BankGains``. The parameters
take a sequence of gain and angle pairs (given in decibels and degrees),
the first pair must be ``0 0``. The characteristic at the intermediate
angles are calculated using linear interpolation. The gains can be
specified independently for the three Euler angles. The default for all
three parameters is ``"0 0"``, thus by default the antenna models an
isotropic antenna.

The configuration for this antenna is :ned:`InterpolatingAntenna` in
:download:`omnetpp.ini <../omnetpp.ini>`:

.. literalinclude:: ../omnetpp.ini
   :start-at: InterpolatingAntenna
   :language: ini

The antenna type in ``source``'s radio is set to
:ned:`InterpolatingAntenna`. Only the heading gains are set, specifying a
hypothetical rectangular radiation pattern. It looks like the following:

.. figure:: interpolating1.png
   :width: 70%
   :align: center

.. video:: interpolating2.mp4

The edges of the rectangular radiation pattern can be made less rounded
by specifying more points in the gain parameter (the points are given by
the 1/cos(x) equation).

.. figure:: interpolatingchart.png
   :width: 100%

Here are the results for all antennas on one chart, for comparison:

.. figure:: allantennas.png
   :width: 100%

Sources: :download:`omnetpp.ini <../omnetpp.ini>`, :download:`DirectionalSelectivityShowcase.ned <../DirectionalSelectivityShowcase.ned>`

Discussion
----------

Use `this <https://github.com/inet-framework/inet-showcases/issues/TODO>`__ page in the GitHub issue tracker for commenting on this showcase.
