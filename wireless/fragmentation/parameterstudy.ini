include omnetpp.ini

[Config IterationPacketSize]
sim-time-limit = 1s

*.wifiHost1.app[0].messageLength = ${packetSize=100,200,300,400,500,750,1000,1500,2000,3000,4000,5000,6000}B
**.fragmentationThreshold = int((${packetSize} + 8 + 20 + 8 + 15) / 16) * 1B + 24B + 4B	# (APP + UDP + IP + LLC) / 16 rounded up + (MAC header + MAC trailer)
**.mtu = 12250B

[Config PacketSizeDCFnofrag]
extends = IterationPacketSize
fingerprint = 4342-c6da/tlx 543e-c6fa/tlx

**.fragmentationThreshold = 2250B

[Config PacketSizeDCFfrag]
#extends = DCFnofrag
extends = IterationPacketSize
fingerprint = cf05-4868/tlx 09b6-4e69/tlx

[Config PacketSizeHCFfrag]
extends = IterationPacketSize
fingerprint = 2402-4052/tlx e226-df5b/tlx

**.fragmentationThreshold = int((${packetSize} + 8 + 20 + 8 + 15) / 16) * 1B + 26B + 4B	# (APP + UDP + IP + LLC) / 16 rounded up + (MAC header + MAC trailer)

*.*.wlan[*].mac.qosStation = true
*.*.wlan[*].mac.hcf.isBlockAckSupported = false

**.wlan[*].classifier.typename = "QosClassifier"
**.mac.hcf.originatorMacDataService.msduAggregationPolicy.typename = ""

*.wifiHost1.app[0].destPort = 4000
*.wifiHost2.app[0].localPort = 4000

[Config PacketSizeHCFfragblockack]
extends = PacketSizeHCFfrag
fingerprint = e663-3875/tlx

**.fragmentationThreshold = int((${packetSize} + 8 + 20 + 8 + 15) / 16) * 1B + 26B + 4B	# (APP + UDP + IP + LLC) / 16 rounded up + (MAC header + MAC trailer)

*.*.wlan[*].mac.hcf.isBlockAckSupported = true

[Config IterationTxPower]
sim-time-limit = 10s

*.wifiHost*.wlan[*].radio.transmitter.power = ${txPower=0.06..0.16 step 0.005}mW

[Config TxPowerDCFnofrag]
extends = IterationTxPower
fingerprint = 4342-c6da/tlx 543e-c6fa/tlx

**.fragmentationThreshold = 2250B

[Config TxPowerDCFfrag]
extends = IterationTxPower
fingerprint = cf05-4868/tlx 09b6-4e69/tlx

**.fragmentationThreshold = 250B

[Config TxPowerHCFfrag]
extends = IterationTxPower
fingerprint = 2402-4052/tlx e226-df5b/tlx

**.fragmentationThreshold = 250B

*.*.wlan[*].mac.qosStation = true
*.*.wlan[*].mac.hcf.isBlockAckSupported = false

**.wlan[*].classifier.typename = "QosClassifier"
**.mac.hcf.originatorMacDataService.msduAggregationPolicy.typename = ""

*.wifiHost1.app[0].destPort = 4000
*.wifiHost2.app[0].localPort = 4000

[Config TxPowerHCFfragblockack]
extends = TxPowerHCFfrag, IterationTxPower
fingerprint = e663-3875/tlx

*.*.wlan[*].mac.hcf.isBlockAckSupported = true

[Config ThresholdIteration]
sim-time-limit = 10s

**.fragmentationThreshold = ${threshold=200..2000 step 100}B
**.mtu = 12500B

[Config ThresholdDCFnofrag]
fingerprint = 4342-c6da/tlx 543e-c6fa/tlx

**.fragmentationThreshold = ${threshold=2250}B

[Config ThresholdDCFfrag]
extends = ThresholdIteration
fingerprint = cf05-4868/tlx 09b6-4e69/tlx

[Config ThresholdHCFfrag]
extends = ThresholdIteration
fingerprint = 2402-4052/tlx e226-df5b/tlx

*.*.wlan[*].mac.qosStation = true
**.wlan[*].classifier.typename = "QosClassifier"
**.mac.hcf.originatorMacDataService.msduAggregationPolicy.typename = ""

[Config ThresholdHCFfragblockack]
extends = ThresholdHCFfrag,ThresholdIteration
fingerprint = e663-3875/tlx

**.maxBlockAckPolicyFrameLength = 2000B
*.*.wlan[*].mac.hcf.isBlockAckSupported = true

[Config OnlyPacketSizeIteration]
sim-time-limit = 10s

*.wifiHost1.app[0].messageLength = ${packetSize=100,200,300,400,500,750,1000,1500,2000,2500}B
**.mtu = 12500B

[Config OnlyPacketSizeDCFnofrag]
extends = OnlyPacketSizeIteration
fingerprint = 4342-c6da/tlx 543e-c6fa/tlx

**.fragmentationThreshold = 2250B

[Config OnlyPacketSizeDCFfrag]
extends = OnlyPacketSizeIteration
fingerprint = cf05-4868/tlx 09b6-4e69/tlx

**.fragmentationThreshold = 250B

[Config OnlyPacketSizeHCFfrag]
extends = OnlyPacketSizeIteration
fingerprint = 2402-4052/tlx e226-df5b/tlx

**.fragmentationThreshold = 250B

*.*.wlan[*].mac.qosStation = true
**.wlan[*].classifier.typename = "QosClassifier"
**.mac.hcf.originatorMacDataService.msduAggregationPolicy.typename = ""

[Config OnlyPacketSizeHCFfragblockack]
extends = OnlyPacketSizeHCFfrag,OnlyPacketSizeIteration
fingerprint = e663-3875/tlx

**.maxBlockAckPolicyFrameLength = 2000B
*.*.wlan[*].mac.hcf.isBlockAckSupported = true