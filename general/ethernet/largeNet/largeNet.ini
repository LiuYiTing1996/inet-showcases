[General]
network = LargeNet
sim-time-limit = 50s
tkenv-plugin-path = ../../../etc/plugins
**.result-recording-modes =
**.scalar-recording = false
**.vector-recording = false

#
## number of hosts = SmallLAN.h*(n*bbs+as+bs+cs+ds) + (MediumLAN.h+MediumLAN.n)*(n*bbm+am+bm+cm+dm) + (LargeLAN.h+LargeLAN.n+LargeLAN.b)*(n*bbl+al+bl+cl+dl) = 456

LargeNet.n = 8   # number of switches on backbone

LargeNet.*s = 1   # one LAN of each type on each switch
LargeNet.*m = 1   # one LAN of each type on each switch
LargeNet.*l = 1   # one LAN of each type on each switch

LargeNet.*.n = 8 # number of hosts connected to a switch in each LAN
LargeNet.*.h = 5 # number of hosts connected to a hub in each LAN
LargeNet.*.b = 7 # number of hosts connected to a bus in each LAN

# request-response
LargeNet.**.cli.reqLength = intuniform(50,1400)*1B
LargeNet.**.cli.respLength = intWithUnit(truncnormal(5000B,5000B))
LargeNet.**.cli.sendInterval = exponential(0.5s)  # avg 2 requests per sec

# destination
LargeNet.*.*host[0].cli.destAddress = "serverA"
LargeNet.*.*host[1].cli.destAddress = "serverB"
LargeNet.*.*host[2].cli.destAddress = "serverB"
LargeNet.*.*host[3].cli.destAddress = "serverC"
LargeNet.*.*host[4].cli.destAddress = "serverC"
LargeNet.*.*host[*].cli.destAddress = "serverD"
LargeNet.server*.cli.destAddress = ""

# MAC settings
**.mac.duplexMode = true
**.switch*.relayUnit.typename = "MacRelayUnit"

# queue
**.queue.typename = "DropTailQueue"
**.queue.frameCapacity = 100

[Config Statistics]
description = "Collecting statistics"

# statistics
**.switch*.eth[*].queue.*dropPk*.scalar-recording = true
**.switch*.eth[*].queue.*dropPk*.result-recording-modes = count 
#**.mac.*collision*.vector-recording = true
#**.mac.*collision*.result-recording-modes = vector
#**.*queueLength*.vector-recording = true
#**.*queueLength*.result-recording-modes = vector
**.*collisions*.scalar-recording = true
**.*collisions*.result-recording-modes = count

[Config LargeNet_notOverloaded]
description = "The network is not overloaded by the nearly 500 hosts"
extends = Statistics

[Config LargeNet_overloadedBySendIntervall]
description = "The network is overloaded by the nearly 500 hosts performing high data rate"
extends = Statistics

# sendInterval -> average 25 requests per sec
LargeNet.**.cli.sendInterval = exponential(0.04s)

[Config LargeNet_overloadedByNumberOfHosts]
description = "The network is overloaded because of the huge number of hosts with low data rate"
extends = Statistics

#
## number of hosts = s.h*(n*bbs+as+bs+cs+ds) + (m.h+m.n)*(n*bbm+am+bm+cm+dm) + (l.h+l.n+l.b)*(n*bbl+al+bl+cl+dl) = 1280 + 3341 + 2640 = 7261
#
LargeNet.n = 15   # number of switches on backbone

LargeNet.bbs=6	# number of small LANs on backbone switches
LargeNet.bbm=15 # number of medium LANs on backbone switches
LargeNet.bbl=8  # number of large LANs on backbone switches

LargeNet.?s=4   # sets as,bs,cs: number of small LANs on switches A,B,C,D
LargeNet.?m=8   # sets am,bm,cm: number of medium LANs on switches A,B,C,D
LargeNet.?l=3   # sets al,bl,cl: number of large LANs on switches A,B,C,D

LargeNet.*.n = 8 # number of hosts connected to a switch in each LAN
LargeNet.*.h = 5 # number of hosts connected to a hub in each LAN
LargeNet.*.b = 7 # number of hosts connected to a bus in each LAN